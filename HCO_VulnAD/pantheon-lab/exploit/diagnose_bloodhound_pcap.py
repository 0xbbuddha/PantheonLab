from scapy.all import rdpcap, DNSQR, DNSRR, TCP, IP, UDP

DNS_PORT = 53
LDAP_PORT = 389
KERBEROS_PORT = 88

packets = rdpcap(input("nxc_bloodhound.pcapng : "))

dns_queries = {}
dns_answers = {}
ldap_connections = []
ldap_errors = []
kerberos_activity = []

print("\n[1] üîç DNS Activity")
for pkt in packets:
    if pkt.haslayer(DNSQR):
        query = pkt[DNSQR].qname.decode()
        dns_queries[query] = pkt[IP].src
        print(f"  üß≠ DNS Query from {pkt[IP].src} -> {query}")

    if pkt.haslayer(DNSRR):
        try:
            name = pkt[DNSRR].rrname.decode()
            rdata = pkt[DNSRR].rdata
            dns_answers.setdefault(name, []).append(str(rdata))
        except Exception:
            pass

for name, rdata_list in dns_answers.items():
    print(f"  ‚úÖ DNS Response: {name} -> {', '.join(rdata_list)}")

if not dns_answers:
    print("  ‚ùå Aucune r√©ponse DNS d√©tect√©e.")

print("\n[2] üß¨ LDAP (TCP 389) Connections")
for pkt in packets:
    if pkt.haslayer(TCP) and (pkt[TCP].dport == LDAP_PORT or pkt[TCP].sport == LDAP_PORT):
        flags = pkt[TCP].flags
        info = f"{pkt[IP].src}:{pkt[TCP].sport} -> {pkt[IP].dst}:{pkt[TCP].dport} Flags={flags}"
        ldap_connections.append(info)
        if "R" in flags:  # Reset flag, connection refused
            ldap_errors.append(f"  ‚ùå Connection reset: {info}")

for conn in ldap_connections:
    print(f"  üîó {conn}")

if not ldap_connections:
    print("  ‚ùå Aucune connexion LDAP d√©tect√©e.")

for err in ldap_errors:
    print(err)

print("\n[3] üîë Kerberos (UDP/TCP 88)")
for pkt in packets:
    if pkt.haslayer(UDP) and pkt[UDP].dport == KERBEROS_PORT:
        kerberos_activity.append(f"  üîê Kerberos (UDP) from {pkt[IP].src} -> {pkt[IP].dst}")
    elif pkt.haslayer(TCP) and (pkt[TCP].dport == KERBEROS_PORT or pkt[TCP].sport == KERBEROS_PORT):
        kerberos_activity.append(f"  üîê Kerberos (TCP) from {pkt[IP].src} -> {pkt[IP].dst}")

if kerberos_activity:
    for k in kerberos_activity:
        print(k)
else:
    print("  ‚ö†Ô∏è Aucune activit√© Kerberos d√©tect√©e (v√©rifie si TGT a bien √©t√© demand√©).")

print("\n[4] üß† R√©sum√©")
if ldap_errors:
    print("‚ùó Probl√®mes LDAP d√©tect√©s :")
    for err in ldap_errors:
        print(err)
if not dns_answers:
    print("‚ùó Probl√®me possible de r√©solution DNS (pas de r√©ponse)")
if not kerberos_activity:
    print("‚ùó Aucun trafic Kerberos d√©tect√©")

