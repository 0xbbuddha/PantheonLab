#########################################################
# DO Community Playbooks: Wordpress on Ubuntu 18.04 LAMP
#########################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml
    - vars/vars.yml

  tasks:
    - name: Install prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes
      tags: [ system ]

    - name: Install LAMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]
      tags: [ system ]

    - name: Install PHP Extensions
      apt: name={{ item }} update_cache=yes state=latest
      loop: "{{ php_modules }}"
      tags: [ system ]

  # Apache Configuration
    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "www-data"
        group: "www-data"
        mode: '0755'
      tags: [ apache ]

    - name: Set up Apache VirtualHost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache
      tags: [ apache ]

    - name: Enable rewrite module
      shell: /usr/sbin/a2enmod rewrite
      notify: Reload Apache
      tags: [ apache ]

    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache
      tags: [ apache ]

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      notify: Restart Apache
      tags: [ apache ]

  # MySQL Configuration
    - name: Set the root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags: [ mysql, mysql-root ]

    - name: Remove all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Remove the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Creates database for WordPress
      mysql_db:
        name: "{{ mysql_db }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

    - name: Create MySQL user for WordPress
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ mysql_db }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      tags: [ mysql ]

  # UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp
      tags: [ system ]

  # WordPress Configuration
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ http_host }}"
        remote_src: yes
        creates: "/var/www/{{ http_host }}/wordpress"
      tags: [ wordpress ]

    - name: Set ownership
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
      tags: [ wordpress ]

    - name: Set permissions for directories
      shell: '/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \;'
      tags: [ wordpress ]

    - name: Set permissions for files
      shell: '/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \;'
      tags: [ wordpress ]

    - name: Copy Greek god images to uploads directory
      copy:
        src: "files/images/"
        dest: "/var/www/{{ http_host }}/wordpress/wp-content/uploads/"
        owner: www-data
        group: www-data
        mode: '0644'
      tags: [ wordpress ]

    - name: Set up wp-config
      template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"
      tags: [ wordpress ]

    - name: Installer WP-CLI
      get_url:
        url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        dest: /usr/local/bin/wp
        mode: '0755'

    - name: Check if WordPress is already installed
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: wp core is-installed --allow-root
      register: wp_installed
      ignore_errors: yes

    - name: Supprimer les anciennes pages des dieux grecs pour éviter les slugs en doublon
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        wp post list --post_type=page --format=ids --allow-root | xargs -r wp post delete --force --allow-root
      tags: [ wordpress ]

    - name: Installer WordPress via WP-CLI
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        wp core install \
          --url={{ wordpress_url }} \
          --title="{{ wordpress_site_title }}" \
          --admin_user={{ wordpress_admin_user }} \
          --admin_password={{ wordpress_admin_password }} \
          --admin_email={{ wordpress_admin_email }} \
          --skip-email \
          --allow-root
      when: wp_installed.rc != 0

    - name: Forcer l’URL du site avec l’IP au lieu de localhost
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        wp option update home "{{ wordpress_url }}" --allow-root
        wp option update siteurl "{{ wordpress_url }}" --allow-root

    - name: Activer les permaliens
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        wp rewrite structure '/%postname%/' --hard --allow-root
        wp rewrite flush --allow-root

    - name: S’assurer que le .htaccess de WordPress est correct
      copy:
        dest: "/var/www/{{ http_host }}/wordpress/.htaccess"
        content: |
          # BEGIN WordPress
          <IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteBase /
          RewriteRule ^index\.php$ - [L]
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule . /index.php [L]
          </IfModule>
          # END WordPress
        owner: www-data
        group: www-data
        mode: '0644'
      tags: [ wordpress ]

    - name: Installer et activer le thème WordPress "twentytwentytwo"
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        wp theme install twentytwentytwo --activate --allow-root

    - name: Ajouter la page d’accueil "Bienvenue au panthéon"
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        wp post create \
        --post_type=page \
        --post_title="Bienvenue au panthéon" \
        --post_content="Bienvenue au panthéon. L'accès à ce dernier est réservé aux dieux et aux plus braves. Le panthéon est impénétrable. Inutile d'essayer de rentrer de force. Pour nous rejoindre, vous devrez passer une batterie d'épreuves afin de prouver votre valeur. En attendant la sortie de ces épreuves, voici une présentation des 12 dieux présents au panthéon." \
        --post_status=publish \
        --allow-root

    - name: Définir la page d’accueil par défaut
      become: yes
      become_user: www-data
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        wp option update show_on_front 'page' --allow-root
        wp option update page_on_front $(wp post list --post_type=page --name="bienvenue-au-pantheon" --field=ID --allow-root)

    - name: Créer les pages pour chaque dieu grec avec image
      become: yes
      become_user: www-data
      vars:
        greek_gods:
          - { name: Zeus, img: zeus.jpg, desc: "Maître de l’Olympe et dieu du ciel et de la foudre." }
          - { name: Héra, img: hera.jpg, desc: "Déesse du mariage et de la famille, épouse de Zeus." }
          - { name: Poséidon, img: poseidon.jpg, desc: "Dieu de la mer, des tempêtes et des tremblements de terre." }
          - { name: Hadès, img: hades.jpg, desc: "Dieu des enfers et des morts." }
          - { name: Déméter, img: demeter.jpg, desc: "Déesse de l’agriculture et des moissons." }
          - { name: Athéna, img: athena.jpg, desc: "Déesse de la sagesse et de la stratégie militaire." }
          - { name: Apollon, img: apollon.jpg, desc: "Dieu de la musique, de la poésie et du soleil." }
          - { name: Artémis, img: artemis.jpg, desc: "Déesse de la chasse et de la nature sauvage." }
          - { name: Arès, img: ares.jpg, desc: "Dieu de la guerre brutale." }
          - { name: Aphrodite, img: aphrodite.jpg, desc: "Déesse de l’amour et de la beauté." }
          - { name: Héphaïstos, img: herphaistos.jpg, desc: "Dieu du feu et de la forge." }
          - { name: Hermès, img: hermes.jpg, desc: "Messager des dieux et dieu du commerce." }
      loop: "{{ greek_gods }}"
      args:
        chdir: "/var/www/{{ http_host }}/wordpress"
      shell: |
        IMAGE_ID=$(wp media import "/var/www/{{ http_host }}/wordpress/wp-content/uploads/{{ item.img }}" --title="{{ item.name }}" --porcelain --allow-root)
        IMAGE_URL=$(wp media get $IMAGE_ID --field=url --allow-root)
        wp post create \
          --post_type=page \
          --post_title="{{ item.name }}" \
          --post_content="<img src='${IMAGE_URL}' style='max-width: 300px'><p>{{ item.desc }}</p>" \
          --post_status=publish \
          --allow-root
      tags: [ wordpress ]

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted


