- import_playbook: config.yml

- name: Configuration du CA01
  hosts: pantheon-ca01
  gather_facts: true
  vars:
    server_type: "ca01"
    domain: "{{ lab.hosts[server_type].domain }}"
    hostname: "{{ lab.hosts[server_type].hostname }}"
    domain_admin_user: "{{ domain }}\\administrator"
    domain_admin_password: "{{ lab.hosts[server_type].local_admin_password }}"
  tasks:
    - name: Installer le rôle ADCS (Root CA)
      win_feature:
        name: AD-Certificate
        state: present
        include_management_tools: yes

    - name: Vérifier si une CA est déjà installée
      win_shell: |
        Import-Module ServerManager
        Import-Module ADCSDeployment
        try {
          $ca = Get-CertificationAuthority -ErrorAction Stop
          Write-Host "CA déjà installée: $($ca.DisplayName)"
          exit 0
        } catch {
          Write-Host "Aucune CA installée"
          exit 1
        }
      register: ca_check
      ignore_errors: true

    - name: Vérifier si déjà Autorité de Certification racine d'entreprise
      win_shell: |
        Import-Module ADCSDeployment
        try {
          $ca = Get-CertificationAuthority -ErrorAction Stop
          if ($ca.CAType -eq 'EnterpriseRootCA') {
            Write-Host "Déjà Autorité de Certification racine d'entreprise"
            exit 0
          } else {
            Write-Host "CA installée mais pas de type EnterpriseRootCA"
            exit 1
          }
        } catch {
          Write-Host "Aucune CA installée (vérification de type ignorée)"
          exit 1
        }
      register: ca_type_check
      ignore_errors: true
      when: ca_check.rc == 0

    - name: Configurer ADCS en tant qu'autorité de certification racine d'entreprise
      ansible.windows.win_powershell:
        script: Install-AdcsCertificationAuthority -CAType EnterpriseRootCA -CryptoProviderName "RSA#Microsoft Software Key Storage Provider" -KeyLength 2048 -HashAlgorithmName SHA256 -CACommonName "test-CA" -ValidityPeriod Years -ValidityPeriodUnits 2 -Force
      when: ca_check.rc != 0 or (ca_type_check is defined and ca_type_check.rc != 0)

    - name: Installer le fournisseur NuGet
      win_shell: |
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force

    - name: Installer le module PSPKI
      win_shell: |
        Install-Module PSPKI -Force

    - name: Configurer les permissions sur le CA
      win_shell: |
        Import-Module PSPKI
        $caHostname = Get-CertificationAuthority | Select-Object -ExpandProperty ComputerName
        Get-CertificationAuthority "$caHostname" | Get-CertificationAuthorityAcl | Add-CertificationAuthorityAcl -Identity "{{ domain }}\\Administrator" -AccessType "Allow" -AccessMask "ManageCa" | Set-CertificationAuthorityAcl -RestartCA
      register: ca_permissions

