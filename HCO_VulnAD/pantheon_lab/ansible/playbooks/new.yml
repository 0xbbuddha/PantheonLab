---
- import_playbook: config.yml

- name: Test de création des objets AD
  hosts: pantheon-dc01
  gather_facts: true
  vars:
    ansible_connection: winrm
    ansible_winrm_transport: plaintext
    ansible_winrm_server_cert_validation: ignore
    ansible_user: Administrator
    ansible_password: "{{ lab.hosts.dc01.local_admin_password }}"
    hostname: "{{ lab.hosts.dc01.hostname }}"
    domain: "{{ lab.hosts.dc01.domain }}"
    domain_username: "{{ domain }}\\Administrator"
    domain_password: "{{ lab.hosts.dc01.local_admin_password }}"
    domain_server: "{{ lab.hosts.dc01.hostname }}.{{ domain }}"
    ad_users: "{{ lab.domains[lab.hosts.dc01.domain].users }}"
    ad_ou: "{{ lab.domains[lab.hosts.dc01.domain].organisation_units }}"
    ad_groups: "{{ lab.domains[lab.hosts.dc01.domain].groups }}"

  tasks:
    - name: Afficher les variables pour debug
      debug:
        msg: 
          - "Domain: {{ domain }}"
          - "Domain Server: {{ domain_server }}"
          - "Domain Username: {{ domain_username }}"

    - name: Créer les OUs de premier niveau
      microsoft.ad.ou:
        name: "{{ item.key }}"
        path: "{{ lab.hosts.dc01.path }}"
        description: "{{ item.value.description }}"
        state: present
        domain_username: "{{ domain_username }}"
        domain_password: "{{ domain_password }}"
        domain_server: "{{ domain_server }}"
      with_dict: "{{ ad_ou }}"
      register: ou_root_creation

    - name: Afficher le résultat de la création des OUs racine
      debug:
        msg: "OU racine créées : {{ ou_root_creation.results | map(attribute='item.key') | list }}"

    - name: Créer les OUs enfants
      microsoft.ad.ou:
        name: "{{ item.key }}"
        path: "{{ item.value.path }}"
        description: "{{ item.value.description }}"
        state: present
        domain_username: "{{ domain_username }}"
        domain_password: "{{ domain_password }}"
        domain_server: "{{ domain_server }}"
      with_dict: "{{ ad_ou.ENFERS.children }}"
      register: ou_children_creation

    - name: Afficher le résultat de la création des OUs enfants
      debug:
        msg: "OU enfants créées : {{ ou_children_creation.results | map(attribute='item.key') | list }}"

    - name: Créer les groupes du domaine
      microsoft.ad.group:
        name: "{{ item.key }}"
        path: "{{ item.value.path }}"
        scope: "{{ item.value.type | default('global') }}"
        category: security
        description: "{{ item.value.description | default('') }}"
        state: present
        domain_username: "{{ domain_username }}"
        domain_password: "{{ domain_password }}"
        domain_server: "{{ domain_server }}"
      with_dict: "{{ ad_groups }}"
      register: groups_creation

    - name: Afficher le résultat de la création des groupes
      debug:
        msg: "Groupes créés : {{ groups_creation.results | map(attribute='item.key') | list }}"

    - name: Créer les utilisateurs du domaine
      microsoft.ad.user:
        name: "{{ item.key }}"
        firstname: "{{ item.value.firstname }}"
        surname: "{{ item.value.surname }}"
        password: "{{ item.value.password }}"
        password_never_expires: yes
        state: present
        path: "{{ item.value.path }}"
        description: "{{ item.value.description }}"
        groups:
          set: "{{ item.value.groups }}"
        enabled: "{{ item.value.enabled | default(true) }}"
        domain_username: "{{ domain_username }}"
        domain_password: "{{ domain_password }}"
        domain_server: "{{ domain_server }}"
      with_dict: "{{ ad_users }}"
      register: users_creation

#    - name: Afficher le résultat de la création des utilisateurs
#      debug:
#        msg: "Utilisateurs créés : {{ users_creation.results | map(attribute='item.key') | list }}"

    - name: Vérifier la création des objets
      win_shell: |
        Write-Host "`n=== OUs ==="
        Get-ADOrganizationalUnit -Filter * | Select-Object Name, DistinguishedName | Format-Table -AutoSize
        
        Write-Host "`n=== Groupes ==="
        Get-ADGroup -Filter * | Select-Object Name, GroupScope, DistinguishedName | Format-Table -AutoSize
        
        Write-Host "`n=== Utilisateurs ==="
        Get-ADUser -Filter * | Select-Object Name, Enabled, DistinguishedName | Format-Table -AutoSize
      register: verification

    - name: Afficher la vérification
      debug:
        var: verification.stdout_lines 